name: "Build stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string

jobs:
  # artefact-1:
  #   name: "Artefact 1"
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 3
  #   steps:
  #     - name: "Checkout code"
  #       uses: actions/checkout@v4
  #     - name: "Build artefact 1"
  #       run: |
  #         echo "Building artefact 1 ..."
  #     - name: "Check artefact 1"
  #       run: |
  #         echo "Checking artefact 1 ..."
  #     - name: "Upload artefact 1"
  #       run: |
  #         echo "Uploading artefact 1 ..."
  #         # TODO: Use either action/cache or action/upload-artifact

  build-stage: # Recommended maximum execution time is 3 minutes
    name: "Build stage"
    uses: ./.github/workflows/jekyll-1-build.yaml
    with:
      build_datetime: "${{ inputs.build_datetime }}"
      build_timestamp: "${{ inputs.build_timestamp }}"
      build_epoch: "${{ inputs.build_epoch }}"
      nodejs_version: "${{ inputs.nodejs_version }}"
      python_version: "${{ inputs.python_version }}"
      terraform_version: "${{ inputs.terraform_version }}"
      version: "${{ inputs.version }}"
    secrets: inherit
